#cache:
#  key: "terraform"
#  paths:
#    - terraform/.terraform/

variables:
  TF_STATE_NAME: kubernetes

stages:
  - validate
  - build
  - deploy

# ----------------------------------------------------------------------
# TERRAFORM
# ----------------------------------------------------------------------

terraform_fmt:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: validate
  rules:
    - changes:
      - .gitlab-ci.yml
      - terraform/*
      - terraform/**/*
  allow_failure: true
  script:
    - cd terraform
    - gitlab-terraform init
    - gitlab-terraform fmt -check -recursive

terraform_validate:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: validate
  rules:
    - changes:
      - .gitlab-ci.yml
      - terraform/*
      - terraform/**/*
  script:
    - cd terraform
    - gitlab-terraform init
    - gitlab-terraform validate

terraform_build:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: build
  resource_group: ${CI_PROJECT_NAME}
  rules:
    - changes:
      - .gitlab-ci.yml
      - terraform/*
      - terraform/**/*
  script:
    - cd terraform
    - gitlab-terraform init
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    paths:
      - terraform/plan.cache
    reports:
      terraform: terraform/plan.json

terraform_deploy:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: deploy
  resource_group: ${CI_PROJECT_NAME}
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
        - .gitlab-ci.yml
        - terraform/*
        - terraform/**/*
  script:
    - cd terraform
    - gitlab-terraform init
    - gitlab-terraform apply

# ----------------------------------------------------------------------
# CLUSTER APPS
# ----------------------------------------------------------------------

argocd_deploy:
  image: bitnami/kubectl:latest
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
        - .gitlab-ci.yml
        - argocd/*
  script:
    - if [ -d argocd ]; then
        kubectl --token ${TF_VAR_rancher_token} --server "https://gonzo-rancher.ncsa.illinois.edu/k8s/clusters/${TF_VAR_argocd_kube_id}" apply -f ./argocd;
      fi
